/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae321714610062578063f9fbdb9e14610080575b600080fd5b610060600480360381019061005b91906104a0565b61009c565b005b61006a610163565b604051610077919061051a565b60405180910390f35b61009a600480360381019061009591906104a0565b6101f5565b005b61014960405180606001604052806023815260200161074660239139600080546100c590610673565b80601f01602080910402602001604051908101604052809291908181526020018280546100f190610673565b801561013e5780601f106101135761010080835404028352916020019161013e565b820191906000526020600020905b81548152906001019060200180831161012157829003601f168201915b505050505083610231565b806000908051906020019061015f929190610395565b5050565b60606000805461017290610673565b80601f016020809104026020016040519081016040528092919081815260200182805461019e90610673565b80156101eb5780601f106101c0576101008083540402835291602001916101eb565b820191906000526020600020905b8154815290600101906020018083116101ce57829003601f168201915b5050505050905090565b61021760405180606001604052806022815260200161076960229139826102d0565b806000908051906020019061022d929190610395565b5050565b6102cb83838360405160240161024993929190610573565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061036c565b505050565b61036882826040516024016102e692919061053c565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061036c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546103a190610673565b90600052602060002090601f0160209004810192826103c3576000855561040a565b82601f106103dc57805160ff191683800117855561040a565b8280016001018555821561040a579182015b828111156104095782518255916020019190600101906103ee565b5b509050610417919061041b565b5090565b5b8082111561043457600081600090555060010161041c565b5090565b600061044b610446846105e4565b6105bf565b90508281526020810184848401111561046357600080fd5b61046e848285610631565b509392505050565b600082601f83011261048757600080fd5b8135610497848260208601610438565b91505092915050565b6000602082840312156104b257600080fd5b600082013567ffffffffffffffff8111156104cc57600080fd5b6104d884828501610476565b91505092915050565b60006104ec82610615565b6104f68185610620565b9350610506818560208601610640565b61050f81610734565b840191505092915050565b6000602082019050818103600083015261053481846104e1565b905092915050565b6000604082019050818103600083015261055681856104e1565b9050818103602083015261056a81846104e1565b90509392505050565b6000606082019050818103600083015261058d81866104e1565b905081810360208301526105a181856104e1565b905081810360408301526105b581846104e1565b9050949350505050565b60006105c96105da565b90506105d582826106a5565b919050565b6000604051905090565b600067ffffffffffffffff8211156105ff576105fe610705565b5b61060882610734565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561065e578082015181840152602081019050610643565b8381111561066d576000848401525b50505050565b6000600282049050600182168061068b57607f821691505b6020821081141561069f5761069e6106d6565b5b50919050565b6106ae82610734565b810181811067ffffffffffffffff821117156106cd576106cc610705565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa2646970667358221220f55afffc73624b53455743ba9831682871df443d650d68dc396e22bcd794a84e64736f6c63430008040033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
